package project_euler;
/*
 * Author: Brandon Bernie
 * 
 * Problem 2
 * 
 * Each new term in the Fibonacci sequence is generated by adding the 
 * previous two terms. By starting with 1 and 2, the first 10 terms will be:
 * 
 * 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
 * 
 * Find the sum of all the even-valued terms in the sequence which do not 
 * exceed four million.
 */

public class PS002 {
	
	public static void main(String[] args) {
		int sum = 0;
		int fibSeedA = 0;
		int fibSeedB = 1;
		int fib = 0;
		int limit = 4000000;
		
		long start = System.nanoTime();
		do{
			fib = fibSeedA + fibSeedB;
			fibSeedA = fibSeedB;
			fibSeedB = fib;
			
			if(fib % 2 == 0)
				sum += fib;
		}while(fibSeedA + fibSeedB < limit);
		long stop = System.nanoTime();
		System.out.println(sum + " " + (stop - start) + " ns");
		
		
		sum=0;
		int a = 1;
		int b = 1;
		int c = a+b;
		start = System.nanoTime();
		while(c<limit){
			sum += c;
			a = b+c;
			b = c+a;
			c = a+b;
		}
		stop = System.nanoTime();
		System.out.println(sum + " " + (stop - start) + " ns");
	}

}
